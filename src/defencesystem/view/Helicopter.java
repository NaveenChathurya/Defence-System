/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defencesystem.view;

import defencesystem.controller.DefenceObservable;
import defencesystem.controller.DefenceObserver;
import defencesystem.Strength;
import defencesystem.SuperDefence;
import java.awt.Color;
import java.awt.event.KeyEvent;

/**
 *
 * @author Naveen Chathurya
 */
public class Helicopter extends SuperDefence implements DefenceObserver {
    
    private static DefenceObserver helicopter;
    private Strength strength = Strength.LOW;
    private DefenceObservable defenceObservable = DefenceObservable.getInstance();
    
    public static DefenceObserver getInstance() {
        if(helicopter==null)
            helicopter = new Helicopter();
        return helicopter;
    }

    private Helicopter() {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        btnHeliLaser.setEnabled(false);
        btnHeliMisile.setEnabled(false);
        btnHeliShoot.setEnabled(false);
        txtAreaHeli.setEditable(false);
        txtAreaHeli.setEnabled(false);
        setResizable(false);
        setLayout(null);
        setBounds(1020, 550, 650, 470);
        getContentPane().setBackground(new Color(234,236,233));
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sliderHeli = new javax.swing.JSlider();
        lblHeliArea = new javax.swing.JLabel();
        btnHeliMisile = new javax.swing.JButton();
        btnHeliShoot = new javax.swing.JButton();
        btnHeliLaser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaHeli = new javax.swing.JTextArea();
        txtFieldHeli = new javax.swing.JTextField();
        btnHeliSend = new javax.swing.JButton();
        lblHeliSoldier = new javax.swing.JLabel();
        lblHeliAmmo = new javax.swing.JLabel();
        spinnerHeliSoldier = new javax.swing.JSpinner();
        spinnerHeliAmmo = new javax.swing.JSpinner();
        chkBoxHeliPosition = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Helicopter");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        sliderHeli.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sliderHeli.setMajorTickSpacing(20);
        sliderHeli.setMinorTickSpacing(10);
        sliderHeli.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderHeli.setPaintLabels(true);
        sliderHeli.setPaintTicks(true);
        sliderHeli.setValue(0);

        lblHeliArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHeliArea.setText("Area Not Cleared");

        btnHeliMisile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHeliMisile.setText("Missile Operation");

        btnHeliShoot.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHeliShoot.setText("Shoot");

        btnHeliLaser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHeliLaser.setText("Laser Operation");

        txtAreaHeli.setColumns(20);
        txtAreaHeli.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtAreaHeli.setRows(5);
        txtAreaHeli.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(txtAreaHeli);

        txtFieldHeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldHeliActionPerformed(evt);
            }
        });
        txtFieldHeli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFieldHeliKeyPressed(evt);
            }
        });

        btnHeliSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHeliSend.setText("Send");
        btnHeliSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHeliSendActionPerformed(evt);
            }
        });

        lblHeliSoldier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHeliSoldier.setText("Soldier Count");

        lblHeliAmmo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHeliAmmo.setText("Ammo Count");

        spinnerHeliSoldier.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerHeliSoldierStateChanged(evt);
            }
        });

        chkBoxHeliPosition.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkBoxHeliPosition.setText("Position");
        chkBoxHeliPosition.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkBoxHeliPositionStateChanged(evt);
            }
        });
        chkBoxHeliPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxHeliPositionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFieldHeli, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHeliSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnHeliLaser, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHeliShoot, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addComponent(btnHeliMisile, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkBoxHeliPosition)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblHeliAmmo)
                                    .addComponent(lblHeliSoldier))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinnerHeliSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinnerHeliAmmo, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHeliArea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(sliderHeli, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sliderHeli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblHeliArea, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnHeliMisile, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                                    .addComponent(btnHeliShoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(btnHeliLaser, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHeliSoldier)
                                    .addComponent(spinnerHeliSoldier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblHeliAmmo)
                                    .addComponent(spinnerHeliAmmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addComponent(chkBoxHeliPosition)))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnHeliSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldHeli))))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkBoxHeliPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxHeliPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxHeliPositionActionPerformed

    private void btnHeliSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHeliSendActionPerformed
        // TODO add your handling code here:
        defenceObservable.setCountsHeli((int)spinnerHeliSoldier.getValue(),(int)spinnerHeliAmmo.getValue(),sliderHeli.getValue());
    }//GEN-LAST:event_btnHeliSendActionPerformed

    private void spinnerHeliSoldierStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerHeliSoldierStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_spinnerHeliSoldierStateChanged

    private void txtFieldHeliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldHeliKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            defenceObservable.recieveMessageHeli("Heliicopter : "+txtFieldHeli.getText());  
            txtFieldHeli.setText("");
        }
    }//GEN-LAST:event_txtFieldHeliKeyPressed

    private void chkBoxHeliPositionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkBoxHeliPositionStateChanged
        if(chkBoxHeliPosition.isSelected()) {
            position(strength);
        }else {
            btnHeliLaser.setEnabled(false);
            btnHeliMisile.setEnabled(false);
            btnHeliShoot.setEnabled(false);        
        }
    }//GEN-LAST:event_chkBoxHeliPositionStateChanged

    private void txtFieldHeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldHeliActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldHeliActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHeliLaser;
    private javax.swing.JButton btnHeliMisile;
    private javax.swing.JButton btnHeliSend;
    private javax.swing.JButton btnHeliShoot;
    private javax.swing.JCheckBox chkBoxHeliPosition;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeliAmmo;
    private javax.swing.JLabel lblHeliArea;
    private javax.swing.JLabel lblHeliSoldier;
    private javax.swing.JSlider sliderHeli;
    private javax.swing.JSpinner spinnerHeliAmmo;
    private javax.swing.JSpinner spinnerHeliSoldier;
    private javax.swing.JTextArea txtAreaHeli;
    private javax.swing.JTextField txtFieldHeli;
    // End of variables declaration//GEN-END:variables

    @Override
    public void areaClear(boolean b) {
        if(b==true){
            lblHeliArea.setText("Area Cleared");
            txtAreaHeli.setText("");
            txtFieldHeli.setText("");
            spinnerHeliAmmo.setValue(0);
            spinnerHeliSoldier.setValue(0);
            sliderHeli.setValue(0);
            chkBoxHeliPosition.setSelected(false);
        }else {
            lblHeliArea.setText("Area Not Cleared");
        }
    }

    @Override
    public void sendMessage(String sendMessage,int index,boolean position) {
        if(index==0) {
            txtAreaHeli.append(sendMessage+"\n");
        }else if(index==1 && position==true) {
            txtAreaHeli.append("Private : "+sendMessage+"\n");
        }
    }

    @Override
    public void position(Strength strength) {
        this.strength = strength;
        if(chkBoxHeliPosition.isSelected()) {
            switch(strength) {
                case LOW:
                    btnHeliLaser.setEnabled(false);
                    btnHeliMisile.setEnabled(false);
                    btnHeliShoot.setEnabled(false);
                    break;
                case MEDIUM:
                    btnHeliLaser.setEnabled(false);
                    btnHeliMisile.setEnabled(false);
                    btnHeliShoot.setEnabled(true);
                    break;
                case HIGH:
                    btnHeliLaser.setEnabled(false);
                    btnHeliMisile.setEnabled(true);
                    btnHeliShoot.setEnabled(true);
                    break;
                case STRONG:
                    btnHeliLaser.setEnabled(true);
                    btnHeliMisile.setEnabled(true);
                    btnHeliShoot.setEnabled(true);
                    break;
                case CLOSED:
                    btnHeliLaser.setEnabled(true);
                    btnHeliMisile.setEnabled(true);
                    btnHeliShoot.setEnabled(true);
                    break;
            }
        }else {
            btnHeliLaser.setEnabled(false);
            btnHeliMisile.setEnabled(false);
            btnHeliShoot.setEnabled(false);
        }
    }
}