/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defencesystem.view;

import defencesystem.controller.DefenceObservable;
import defencesystem.Strength;
import java.awt.Color;
/**
 *
 * @author Naveen Chathurya
 */
public class MainController extends javax.swing.JFrame {
    private int soldierCountHeli;
    private int ammoCountHeli;
    private int fuelLevelHeli;
    private int soldierCountTank;
    private int ammoCountTank;
    private int fuelLevelTank;
    private int soldierCountSub;
    private int ammoCountSub;
    
    private DefenceObservable defenceObservable;
    private static MainController mainController=null;
    /**
     * Creates new form Helicopter
     */
    private MainController() {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        initComponents();
        txtAreaMainBottom.setEditable(false);
        txtAreaMainBottom.setEnabled(false);
        setLayout(null);
        setBounds(170, 30, 720, 500);
        getContentPane().setBackground(new Color(234,236,233));
        setVisible(true);
    }
    
    public static MainController getInstance() {        
        if(mainController==null) mainController = new MainController();
        return mainController;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        btnMainCollectInfo = new javax.swing.JButton();
        comBoxMain = new javax.swing.JComboBox<>();
        lblMainSoldier = new javax.swing.JLabel();
        lblMainFuel = new javax.swing.JLabel();
        lblMainAmmo = new javax.swing.JLabel();
        chkBoxMainArea = new javax.swing.JCheckBox();
        chkBoxMainSend = new javax.swing.JCheckBox();
        sliderMain = new javax.swing.JSlider();
        lblMainPosition = new javax.swing.JLabel();
        btnMainSend = new javax.swing.JButton();
        lblMainSoldierCount = new javax.swing.JLabel();
        lblMainFuelLevel = new javax.swing.JLabel();
        lblMainAmmoCount = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaMainBottom = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaMainTop = new javax.swing.JTextArea();
        positionMainStrength = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Main Controller");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        btnMainCollectInfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMainCollectInfo.setText("Collect Informations");
        btnMainCollectInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainCollectInfoActionPerformed(evt);
            }
        });

        comBoxMain.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comBoxMain.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Defense", "HeliCopter", "Tank", "Submarine" }));
        comBoxMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxMainActionPerformed(evt);
            }
        });

        lblMainSoldier.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainSoldier.setText("Soldier Count");

        lblMainFuel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainFuel.setText("Fuel Level");

        lblMainAmmo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainAmmo.setText("Ammo Count");

        chkBoxMainArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkBoxMainArea.setText("Area Clear");
        chkBoxMainArea.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkBoxMainAreaStateChanged(evt);
            }
        });
        chkBoxMainArea.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                chkBoxMainAreaMouseMoved(evt);
            }
        });
        chkBoxMainArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                chkBoxMainAreaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chkBoxMainAreaMouseReleased(evt);
            }
        });
        chkBoxMainArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxMainAreaActionPerformed(evt);
            }
        });

        chkBoxMainSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkBoxMainSend.setText("Send Private ");
        chkBoxMainSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBoxMainSendActionPerformed(evt);
            }
        });

        sliderMain.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        sliderMain.setMajorTickSpacing(20);
        sliderMain.setMinorTickSpacing(5);
        sliderMain.setPaintLabels(true);
        sliderMain.setPaintTicks(true);
        sliderMain.setValue(0);
        sliderMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMainStateChanged(evt);
            }
        });

        lblMainPosition.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainPosition.setText("Position");

        btnMainSend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnMainSend.setText("Send");
        btnMainSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainSendActionPerformed(evt);
            }
        });

        lblMainSoldierCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainSoldierCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMainSoldierCount.setText("0");

        lblMainFuelLevel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainFuelLevel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMainFuelLevel.setText("0");

        lblMainAmmoCount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMainAmmoCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMainAmmoCount.setText("0");

        txtAreaMainBottom.setColumns(20);
        txtAreaMainBottom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtAreaMainBottom.setRows(5);
        txtAreaMainBottom.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtAreaMainBottom.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtAreaMainBottom.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                txtAreaMainBottomComponentAdded(evt);
            }
        });
        jScrollPane2.setViewportView(txtAreaMainBottom);

        txtAreaMainTop.setColumns(20);
        txtAreaMainTop.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtAreaMainTop.setRows(5);
        jScrollPane3.setViewportView(txtAreaMainTop);

        positionMainStrength.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        positionMainStrength.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        positionMainStrength.setText("Strength");
        positionMainStrength.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                positionMainStrengthComponentAdded(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comBoxMain, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnMainCollectInfo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sliderMain, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMainPosition)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(positionMainStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 149, Short.MAX_VALUE)
                                        .addComponent(chkBoxMainArea)
                                        .addGap(44, 44, 44))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(chkBoxMainSend)
                                                .addGap(79, 79, 79))
                                            .addComponent(btnMainSend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMainSoldier)
                                    .addComponent(lblMainFuel)
                                    .addComponent(lblMainAmmo))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblMainSoldierCount, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(lblMainFuelLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblMainAmmoCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMainCollectInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkBoxMainArea))
                    .addComponent(comBoxMain, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMainSoldier)
                            .addComponent(lblMainSoldierCount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMainFuel)
                            .addComponent(lblMainFuelLevel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMainAmmo)
                            .addComponent(lblMainAmmoCount)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(chkBoxMainSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMainSend))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMainPosition)
                            .addComponent(positionMainStrength))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sliderMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comBoxMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxMainActionPerformed

    private void chkBoxMainAreaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkBoxMainAreaStateChanged
    }//GEN-LAST:event_chkBoxMainAreaStateChanged

    private void btnMainSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainSendActionPerformed
        // TODO add your handling code here:
        defenceObservable.sendMessage(txtAreaMainTop.getText(),comBoxMain.getSelectedIndex(),chkBoxMainSend.isSelected());
    }//GEN-LAST:event_btnMainSendActionPerformed

    private void sliderMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMainStateChanged
        defenceObservable.position(getStrength());
        positionMainStrength.setText(getStrength()+" | "+sliderMain.getValue());
    }//GEN-LAST:event_sliderMainStateChanged

    private void chkBoxMainSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxMainSendActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxMainSendActionPerformed

    private void txtAreaMainBottomComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_txtAreaMainBottomComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAreaMainBottomComponentAdded

    private void positionMainStrengthComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_positionMainStrengthComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_positionMainStrengthComponentAdded

    private void btnMainCollectInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainCollectInfoActionPerformed
        if(comBoxMain.getSelectedItem().toString().equalsIgnoreCase("helicopter")) {
            lblMainSoldierCount.setText(soldierCountHeli+"");
            lblMainAmmoCount.setText(ammoCountHeli+"");
            lblMainFuelLevel.setText(fuelLevelHeli+"");
            System.out.println("Heli");
        }else if(comBoxMain.getSelectedItem().toString().equalsIgnoreCase("tank")) {
            lblMainSoldierCount.setText(soldierCountTank+"");
            lblMainAmmoCount.setText(ammoCountTank+"");
            lblMainFuelLevel.setText(fuelLevelTank+"");
            System.out.println("Tank");
        }else if(comBoxMain.getSelectedItem().toString().equalsIgnoreCase("submarine")) {
            lblMainSoldierCount.setText(soldierCountSub+"");
            lblMainAmmoCount.setText(ammoCountSub+"");
            System.out.println("Sub");
        }
    }//GEN-LAST:event_btnMainCollectInfoActionPerformed

    private void chkBoxMainAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBoxMainAreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxMainAreaActionPerformed

    private void chkBoxMainAreaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBoxMainAreaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkBoxMainAreaMousePressed

    private void chkBoxMainAreaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBoxMainAreaMouseMoved
        // TODO add your handling code here:
        chkBoxMainArea.setSelected(false);
        defenceObservable.areaClear(chkBoxMainArea.isSelected());
    }//GEN-LAST:event_chkBoxMainAreaMouseMoved

    private void chkBoxMainAreaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkBoxMainAreaMouseReleased
        defenceObservable.areaClear(chkBoxMainArea.isSelected());
        lblMainAmmoCount.setText("0");
        lblMainFuelLevel.setText("0");
        lblMainSoldierCount.setText("0");
        txtAreaMainBottom.setText("");
        txtAreaMainTop.setText("");
        sliderMain.setValue(0);
    }//GEN-LAST:event_chkBoxMainAreaMouseReleased
    
    public void recieveMessage(String text) {
        txtAreaMainBottom.append(text+"\n");
    }
    
    public Strength getStrength() {
        if(sliderMain.getValue()<=20){
            return Strength.LOW;
        }else if(sliderMain.getValue()<=40) {
            return Strength.MEDIUM;
        }else if(sliderMain.getValue()<=60) {
            return Strength.HIGH;
        }else if(sliderMain.getValue()<=80) {
            return Strength.STRONG;
        }else {
            return Strength.CLOSED;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMainCollectInfo;
    private javax.swing.JButton btnMainSend;
    private javax.swing.JCheckBox chkBoxMainArea;
    private javax.swing.JCheckBox chkBoxMainSend;
    private javax.swing.JComboBox<String> comBoxMain;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblMainAmmo;
    private javax.swing.JLabel lblMainAmmoCount;
    private javax.swing.JLabel lblMainFuel;
    private javax.swing.JLabel lblMainFuelLevel;
    private javax.swing.JLabel lblMainPosition;
    private javax.swing.JLabel lblMainSoldier;
    private javax.swing.JLabel lblMainSoldierCount;
    private javax.swing.JLabel positionMainStrength;
    private javax.swing.JSlider sliderMain;
    private javax.swing.JTextArea txtAreaMainBottom;
    private javax.swing.JTextArea txtAreaMainTop;
    // End of variables declaration//GEN-END:variables

    public void setCountsHeli(int soldier, int ammo, int fuel) {
        this.soldierCountHeli = soldier;
        this.ammoCountHeli = ammo;
        this.fuelLevelHeli = fuel;
    }
    
    public void setCountsTank(int soldier, int ammo, int fuel) {
        this.soldierCountTank = soldier;
        this.ammoCountTank = ammo;
        this.fuelLevelTank = fuel;
    }
    
    public void setCountsSub(int soldier, int ammo) {
        this.soldierCountSub = soldier;
        this.ammoCountSub = ammo;
    }

    public void setDefenceObservable(DefenceObservable defenceObservable) {
        this.defenceObservable = defenceObservable;
    }
}